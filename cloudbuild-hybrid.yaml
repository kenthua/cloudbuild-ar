steps:
- name: gcr.io/cloud-builders/mvn
  id: test
  entrypoint: mvn
  env:
  - "PROJECT_ID=${PROJECT_ID}"
  - "BUILD_ID=${BUILD_ID}"
  - "SHORT_SHA=${SHORT_SHA}"
  args: ['test']
- name: gcr.io/cloud-builders/mvn
  id: deploy
  env:
  - "PROJECT_ID=${PROJECT_ID}"
  - "BUILD_ID=${BUILD_ID}"
  - "SHORT_SHA=${SHORT_SHA}"
  args: 
  - "deploy"
  - "-Dmaven.test.skip=true"
- name: gcr.io/cloud-builders/mvn
  id: containerize
  env:
  - "PROJECT_ID=${PROJECT_ID}"
  - "BUILD_ID=${BUILD_ID}"
  - "SHORT_SHA=${SHORT_SHA}"
  args:
  - "compile"
  - "jib:build"
- name: gcr.io/cloud-builders/gcloud
  id: get_kubeconfig
  entrypoint: /bin/sh
  env:
  - "PROJECT_ID=${PROJECT_ID}"
  args:
  - "-c"
  - |
    export KUBECONFIG="${pwd}/cgw-kubeconfig" && \
    gcloud container hub memberships get-credentials ${_CLUSTER_NAME}
- name: gcr.io/k8s-skaffold/skaffold:v1.24.0
  id: skaffold_deploy
  args:
  - "deploy"
  - "--tags ${SHORT_SHA}"
  - "--kubeconfig ${pwd}/cgw-kubeconfig"
# - name: gcr.io/cloud-builders/gcloud
#   id: k8s_deploy
#   entrypoint: /bin/sh
#   env:
#   - "PROJECT_ID=${PROJECT_ID}"
#   args:
#   - "-c"
#   - |
#     export KUBECONFIG="${pwd}/cgw-kubeconfig" && \
#     gcloud container hub memberships get-credentials ${_CLUSTER_NAME} && \
#     kubectl --kubeconfig ${pwd}/cgw-kubeconfig apply -f kubernetes-manifests/deployment.yaml
substitutions:
  _CLUSTER_NAME: cluster-1
options:
  anthosCluster:
    membership: projects/${PROJECT_NUMBER}/locations/global/memberships/${_CLUSTER_NAME}